name: Build and test

# Controls when the workflow will run
on:
  workflow_dispatch:

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'
  build:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    name: build (${{ matrix.python-version }}, ${{ matrix.platform.name }})
    runs-on: ${{ matrix.platform.os }}
    strategy:
      max-parallel: 9
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        platform:

          - { name: "linux", os: "ubuntu-latest", shell: "bash -l {0}" }

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}
    steps:
# Checkout the alchemate and somd2 repositories
      - name: Checkout the alchemate repository (commit)
        uses: actions/checkout@v4
        if: github.event_name != 'pull_request'
#
      - name: Checkout the alchemate repository (PR)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
        if: github.event_name == 'pull_request'
#
      - name: Checkout the somd2 repository
        uses: actions/checkout@v4
        with:
          repository: 'OpenBioSim/somd2'
# Setup conda and install somd2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          path: ${{ github.workspace }}/somd2
          activate-environment: somd2
          environment-file:  ${{ github.workspace }}/somd2/environment.yaml
          miniforge-version: latest
          cache-environment: true
          run-post: ${{ matrix.platform.name != 'windows' }}
#
      - name: Install alchemate
        run: |
          cd alchemate
          pip install .
#
      - name: Install pytest
        run: conda install pytest
#
      - name: Install the package
        run: pip install .
#
      - name: Run the tests
        run: python -m pytest -svvv --color=yes tests